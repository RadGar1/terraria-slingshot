using System;
using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Graphics;
using Terraria.ID;
using Terraria;
using Terraria.ModLoader;
using Slingshot.Items.Ammos;

namespace Slingshot.Projectiles //We need this to basically indicate the folder where it is to be read from, so you the texture will load correctly
{
	public class ichorRock : ModProjectile
	{
		public override void SetDefaults()
		{
			Projectile.Name = "ichorRock"; //Name of the projectile, only shows this if you get killed by it
			Projectile.width = 8; //Set the hitbox width
			Projectile.height = 8; //Set the hitbox height
			Projectile.timeLeft = 999; //The amount of time the projectile is alive for
			Projectile.penetrate = 1; //Tells the game how many enemies it can hit before being destroyed
			Projectile.friendly = true; //Tells the game whether it is friendly to players/friendly npcs or not
			Projectile.hostile = false; //Tells the game whether it is hostile to players or not
			Projectile.tileCollide = true; //Tells the game whether or not it can collide with a tile
			Projectile.ignoreWater = false; //Tells the game whether or not projectile will be affected by water
			Projectile.DamageType = DamageClass.Ranged; //Tells the game whether it is a ranged projectile or not
			Projectile.aiStyle = 2; //How the projectile works, this is no AI, it just goes a straight path
			Projectile.light = 0f;

		}
		public override void OnHitNPC(NPC target, int damage, float knockback, bool crit)
		{
			//target.AddBuff(BuffID.Ichor, 30 * 6); //old effect (inflicts ichor)
			Player p = Main.player[Projectile.owner];
			int healingAmount = damage / 40; //decrease the value 30 to increase heal, increase value to decrease. Or you can just replace damage/x with a set value to heal, instead of making it based on damage.
			p.statLife += healingAmount;
			p.HealEffect(healingAmount, true);
	}

		public override void AI()
		{
			int dust = Dust.NewDust(Projectile.Center, 1, 1, DustID.Ichor, 0f, 0f, 0, default(Color), 1f);
		}
	}
}